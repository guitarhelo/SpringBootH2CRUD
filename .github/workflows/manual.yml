# This is a basic workflow that is manually triggered

name: Build and Image workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
   

jobs:
  #Test's job
  tests:
    name: Unit tests
    #Run on Ubuntu using the latest version
    runs-on: ubuntu-latest
    #Job's steps
    steps:
      #Check-out your repository under $GITHUB_WORKSPACE, so your workflow can access it
      - uses: actions/checkout@v1
      #Set up JDK 11
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: '11'
      #Set up Maven cache
      - name: Cache Maven packages
        #This action allows caching dependencies and build outputs to improve workflow execution time.
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      #Run Tests
      - name: Run Tests
        run: mvn -B test
    #Build's job
  build:
      #Depends on sonar's job
      #needs: sonar
      name: Build
      #Run on Ubuntu using the latest version
      runs-on: ubuntu-latest
      steps:
        #Check-out your repository under $GITHUB_WORKSPACE, so your workflow can access it
        - uses: actions/checkout@v1
        #Set up JDK 11
        - name: Set up JDK
          uses: actions/setup-java@v1
          with:
            java-version: '11'
        #Set up Maven cache
        - name: Cache Maven packages
          #This action allows caching dependencies and build outputs to improve workflow execution time.
          uses: actions/cache@v1
          with:
            path: ~/.m2
            key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
            restore-keys: ${{ runner.os }}-m2
        #Build the application using Maven
        - name: Build with Maven
          run: mvn -B package -DskipTests --file pom.xml
        - name: Build Docker Image
          run docker build . --file Dockerfile --tag SpringBootH2CRUD:$(data +%s)
        - name: Publish to Docker Repository
          uses:: elgohr/Publish-Docker-Github-Action@master
          with:
            name: panjingping1976/SpringBootH2CRUD:1.0
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}



